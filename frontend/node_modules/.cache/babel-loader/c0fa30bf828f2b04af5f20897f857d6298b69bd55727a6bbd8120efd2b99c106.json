{"ast":null,"code":"import axios from \"axios\";\n\n// Create an axios instance with default settings\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5002\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// API functions for real-time data\nexport const getRealTimeData = async (type = \"all\") => {\n  try {\n    const response = await api.get(`/real_time_data?type=${type}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching real-time data:\", error);\n    throw error;\n  }\n};\n\n// API functions for delivery predictions\nexport const getPrediction = async params => {\n  try {\n    const response = await api.post(\"/predict\", params);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error getting prediction:\", error);\n    throw error;\n  }\n};\n\n// API functions for pending orders\nexport const getPendingOrders = async (day = null) => {\n  try {\n    const url = day ? `/pending_orders?day=${day}` : \"/pending_orders\";\n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching pending orders:\", error);\n    throw error;\n  }\n};\n\n// API functions for route optimization\nexport const optimizeRoute = async params => {\n  try {\n    const response = await api.post(\"/optimize_route\", params);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error optimizing route:\", error);\n    throw error;\n  }\n};\n\n// API functions for the chatbot assistant\nexport const sendChatMessage = async message => {\n  try {\n    const response = await api.post(\"/chat\", {\n      message\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error sending chat message:\", error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","getRealTimeData","type","response","get","data","error","console","getPrediction","params","post","getPendingOrders","day","url","optimizeRoute","sendChatMessage","message"],"sources":["/Users/mrterrific/Downloads/nothing_important/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// Create an axios instance with default settings\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5002\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// API functions for real-time data\nexport const getRealTimeData = async (type = \"all\") => {\n  try {\n    const response = await api.get(`/real_time_data?type=${type}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching real-time data:\", error);\n    throw error;\n  }\n};\n\n// API functions for delivery predictions\nexport const getPrediction = async (params) => {\n  try {\n    const response = await api.post(\"/predict\", params);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error getting prediction:\", error);\n    throw error;\n  }\n};\n\n// API functions for pending orders\nexport const getPendingOrders = async (day = null) => {\n  try {\n    const url = day ? `/pending_orders?day=${day}` : \"/pending_orders\";\n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching pending orders:\", error);\n    throw error;\n  }\n};\n\n// API functions for route optimization\nexport const optimizeRoute = async (params) => {\n  try {\n    const response = await api.post(\"/optimize_route\", params);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error optimizing route:\", error);\n    throw error;\n  }\n};\n\n// API functions for the chatbot assistant\nexport const sendChatMessage = async (message) => {\n  try {\n    const response = await api.post(\"/chat\", { message });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error sending chat message:\", error);\n    throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,IAAI,GAAG,KAAK,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,wBAAwBF,IAAI,EAAE,CAAC;IAC9D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMT,GAAG,CAACgB,IAAI,CAAC,UAAU,EAAED,MAAM,CAAC;IACnD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,gBAAgB,GAAG,MAAAA,CAAOC,GAAG,GAAG,IAAI,KAAK;EACpD,IAAI;IACF,MAAMC,GAAG,GAAGD,GAAG,GAAG,uBAAuBA,GAAG,EAAE,GAAG,iBAAiB;IAClE,MAAMT,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAACS,GAAG,CAAC;IACnC,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAOL,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMT,GAAG,CAACgB,IAAI,CAAC,iBAAiB,EAAED,MAAM,CAAC;IAC1D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMT,GAAG,CAACgB,IAAI,CAAC,OAAO,EAAE;MAAEM;IAAQ,CAAC,CAAC;IACrD,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}