{"ast":null,"code":"var _jsxFileName = \"/Users/mrterrific/Downloads/nothing_important/frontend/src/components/RealTimeConditions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport TrafficCard from \"./TrafficCard\";\nimport FestivalCard from \"./FestivalCard\";\nimport { getRealTimeData } from \"../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RealTimeConditions = () => {\n  _s();\n  const [realTimeData, setRealTimeData] = useState({\n    weather: null,\n    traffic: null,\n    festivals: null,\n    weather_summary: \"\",\n    traffic_summary: \"\",\n    festival_summary: \"\",\n    timestamp: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n\n  // Function to fetch real-time data\n  const fetchRealTimeData = async () => {\n    try {\n      setRefreshing(true);\n      const data = await getRealTimeData();\n      setRealTimeData(data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching real-time data:\", err);\n      setError(\"Failed to load real-time data. Please try again later.\");\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchRealTimeData();\n  }, []);\n\n  // Format timestamp if available\n  const formattedTime = realTimeData.timestamp ? new Date(realTimeData.timestamp).toLocaleTimeString() : \"N/A\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header bg-dark text-white d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-clock-history me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \"Real-time Conditions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [realTimeData.timestamp && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"me-3 text-light\",\n          children: [\"Last updated: \", formattedTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-light\",\n          onClick: fetchRealTimeData,\n          disabled: refreshing,\n          children: refreshing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm me-1\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), \"Refreshing...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-arrow-clockwise me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), \" Refresh\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-3\",\n          children: \"Loading real-time conditions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(WeatherCard, {\n            data: realTimeData.weather,\n            summary: realTimeData.weather_summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(TrafficCard, {\n            data: realTimeData.traffic,\n            summary: realTimeData.traffic_summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(FestivalCard, {\n            data: realTimeData.festivals,\n            summary: realTimeData.festival_summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimeConditions, \"NhY5I8oX1sQoh5ILIaBenaBxTTM=\");\n_c = RealTimeConditions;\nexport default RealTimeConditions;\nvar _c;\n$RefreshReg$(_c, \"RealTimeConditions\");","map":{"version":3,"names":["React","useState","useEffect","WeatherCard","TrafficCard","FestivalCard","getRealTimeData","jsxDEV","_jsxDEV","Fragment","_Fragment","RealTimeConditions","_s","realTimeData","setRealTimeData","weather","traffic","festivals","weather_summary","traffic_summary","festival_summary","timestamp","loading","setLoading","error","setError","refreshing","setRefreshing","fetchRealTimeData","data","err","console","formattedTime","Date","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","role","summary","_c","$RefreshReg$"],"sources":["/Users/mrterrific/Downloads/nothing_important/frontend/src/components/RealTimeConditions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport TrafficCard from \"./TrafficCard\";\nimport FestivalCard from \"./FestivalCard\";\nimport { getRealTimeData } from \"../services/api\";\n\nconst RealTimeConditions = () => {\n  const [realTimeData, setRealTimeData] = useState({\n    weather: null,\n    traffic: null,\n    festivals: null,\n    weather_summary: \"\",\n    traffic_summary: \"\",\n    festival_summary: \"\",\n    timestamp: null,\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n\n  // Function to fetch real-time data\n  const fetchRealTimeData = async () => {\n    try {\n      setRefreshing(true);\n      const data = await getRealTimeData();\n      setRealTimeData(data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching real-time data:\", err);\n      setError(\"Failed to load real-time data. Please try again later.\");\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchRealTimeData();\n  }, []);\n\n  // Format timestamp if available\n  const formattedTime = realTimeData.timestamp\n    ? new Date(realTimeData.timestamp).toLocaleTimeString()\n    : \"N/A\";\n\n  return (\n    <div className=\"card mb-4\">\n      <div className=\"card-header bg-dark text-white d-flex justify-content-between align-items-center\">\n        <h4>\n          <i className=\"bi bi-clock-history me-2\"></i>Real-time Conditions\n        </h4>\n        <div>\n          {realTimeData.timestamp && (\n            <small className=\"me-3 text-light\">\n              Last updated: {formattedTime}\n            </small>\n          )}\n          <button\n            className=\"btn btn-sm btn-outline-light\"\n            onClick={fetchRealTimeData}\n            disabled={refreshing}\n          >\n            {refreshing ? (\n              <>\n                <span\n                  className=\"spinner-border spinner-border-sm me-1\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Refreshing...\n              </>\n            ) : (\n              <>\n                <i className=\"bi bi-arrow-clockwise me-1\"></i> Refresh\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"card-body\">\n        {loading ? (\n          <div className=\"text-center py-5\">\n            <div className=\"spinner-border text-primary\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <p className=\"mt-3\">Loading real-time conditions...</p>\n          </div>\n        ) : error ? (\n          <div className=\"alert alert-danger\">{error}</div>\n        ) : (\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <WeatherCard\n                data={realTimeData.weather}\n                summary={realTimeData.weather_summary}\n              />\n            </div>\n            <div className=\"col-md-4\">\n              <TrafficCard\n                data={realTimeData.traffic}\n                summary={realTimeData.traffic_summary}\n              />\n            </div>\n            <div className=\"col-md-4\">\n              <FestivalCard\n                data={realTimeData.festivals}\n                summary={realTimeData.festival_summary}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeConditions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}